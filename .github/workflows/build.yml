name: Build

on: [push]

jobs:
  build_backend:
    name: Build & Test Backend
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Setup Go environment
        uses: actions/setup-go@v2.1.4
        with:
          go-version: "^1.19.4"
      - name: Run tests
        run: go test ./internal/...
      - name: Build Application
        run: ./scripts/build.sh

  build_frontend:
    name: Build & Test Frontend
    runs-on: ubuntu-latest

    env:
      frontend-dir: ./frontend

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3.1.0
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: npm ci
        working-directory: ${{ env.frontend-dir }}
      - name: Build (typecheck) the project
        run: npm run typecheck
        working-directory: ${{ env.frontend-dir }}
      - name: Lint the project
        run: npm run lint
        working-directory: ${{ env.frontend-dir }}
      - name: Run the tests
        run: npm test
        working-directory: ${{ env.frontend-dir }}

  build_ios:
    name: Build iOS App
    runs-on: macos-11

    env:
      frontend-dir: ./frontend

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3.1.0
        with:
          node-version: ${{ matrix.node-version }}
      - name: Set up environment (dependencies, Xcode project)
        run: scripts/setup --ios --ci
        working-directory: ${{ env.frontend-dir }}
      - name: Build the app
        run: bundle exec fastlane build_only
        working-directory: ${{ env.frontend-dir }}/ios
