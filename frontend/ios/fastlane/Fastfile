default_platform(:ios)

platform :ios do
  desc "Builds the app without a provisioning profile"
  lane :build_only do
    # set version number to number from env vars
    increment_version_number(
      version_number: "0.0.0"
    )

    # increment build number depending on current build number in testflight
    increment_build_number(
      build_number: 1,
      xcodeproj: "Eventer.xcodeproj"
    )
    
    # build app
    xcodebuild(
      scheme: "Eventer",
      workspace: "Eventer.xcworkspace",
      sdk: "iphonesimulator",
      configuration: "Release",
      derivedDataPath: "build",
    )
  end

  lane :build_cached do
    scheme = "Eventer"
    build_configuration = "Release"
    # !!! Path to the folder that you will cache on CI !!!
    ios_derived_data_path = File.expand_path("../.local_derived_data")
    
    # set version number to number from env vars
    increment_version_number(
      version_number: "0.0.0"
    )

    # increment build number depending on current build number in testflight
    increment_build_number(
      build_number: 1,
      xcodeproj: "Eventer.xcodeproj"
    )

    # Step 4) Build full app .xcworkspace
    xcodebuild(
      scheme: "Eventer",
      workspace: "Eventer.xcworkspace",
      derivedDataPath: ios_derived_data_path,
      configuration: build_configuration,
      sdk: "iphonesimulator"
    )


    # Step 5) Remove not a Pods binaries to reduce cache size
    require 'fileutils';
    dirs = [
    #  File.expand_path("#{ios_derived_data_path}/info.plist"),
      File.expand_path("#{ios_derived_data_path}/Logs"),
    #  File.expand_path("#{ios_derived_data_path}/SourcePackages"),
    #  File.expand_path("#{ios_derived_data_path}/ModuleCache.noindex"),
    #  File.expand_path("#{ios_derived_data_path}/Build/Intermediates.noindex/ArchiveIntermediates/Eventer/IntermediateBuildFilesPath/Eventer.build"),
    #  File.expand_path("#{ios_derived_data_path}/Build/Intermediates.noindex/ArchiveIntermediates/Eventer/IntermediateBuildFilesPath/XCBuildData"),
    #  File.expand_path("#{ios_derived_data_path}/Build/Intermediates.noindex/ArchiveIntermediates/Eventer/BuildProductsPath/SwiftSupport"),
    #  File.expand_path("#{ios_derived_data_path}/Build/Intermediates.noindex/ArchiveIntermediates/Eventer/PrecompiledHeaders")
    ]
    dirs.each { |dir| FileUtils.rm_rf(dir) }
  end

  lane :beta do 
    create_keychain(
      name: "#{ENV["KEYCHAIN_NAME"]}",
      password: "#{ENV["KEYCHAIN_PASS"]}",
      unlock: true,
      timeout: 3600,
      lock_when_sleeps: false
    )
    app_store_connect_api_key(
      key_id: "#{ENV["PRIVATE_KEY_ID"]}",
      issuer_id: "#{ENV["PRIVATE_KEY_ISSUER"]}",
      key_content: "#{ENV["PRIVATE_KEY_CONTENT"]}",
      duration: 1200, # optional (maximum 1200)
      in_house: false # optional but may be required if using match/sigh
    )
    match(
      type: "appstore", 
      readonly: is_ci,
      keychain_name: "#{ENV["KEYCHAIN_NAME"]}",
      keychain_password: "#{ENV["KEYCHAIN_PASS"]}"
    )
    update_project_provisioning(
      xcodeproj: "Eventer.xcodeproj",
      profile: "#{ENV["sigh_dev.pesca.app.Eventer_appstore_profile-path"]}", # optional if you use sigh
      build_configuration: "Release",
      code_signing_identity: "iPhone Distribution"
    )
    update_code_signing_settings(
      path: "Eventer.xcodeproj",
      profile_name: "#{ENV["sigh_dev.pesca.app.Eventer_appstore_profile-name"]}",
      profile_uuid: "#{ENV["sigh_dev.pesca.app.Eventer_appstore"]}",
      team_id: "#{ENV["sigh_dev.pesca.app.Eventer_appstore_team-id"]}",
    )
    # set version number to number from env vars
    increment_version_number(
      version_number: ENV["VERSION_NUMBER"]
    )

    # increment build number depending on current build number in testflight
    increment_build_number(
      build_number: latest_testflight_build_number + 1,
      xcodeproj: "Eventer.xcodeproj"
    )

    # build and upload app
    build_app(scheme: "Eventer")
    upload_to_testflight
  end
end
